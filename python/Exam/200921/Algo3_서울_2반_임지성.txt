초기상태 -,-,-,-,-,-,-,-
2 삽입 -,2,-,-,-,-,-,-
3 삽입 -,2,3,-,-,-,-,-
4 삽입 -,2,3,4,-,-,-,-
5 삽입 -,2,3,4,5,-,-,-
1 삽입 -,2,3,4,5,1,-,-
수정 -,2,1,4,5,3,-,-
수정 -,1,2,4,5,3,-,-
9 삽입 -,1,2,4,5,3,9,-
8 삽입 -,1,2,4,5,3,9,8
삭제 -,-,2,4,5,3,9,8 (삭제된 값 1)
수정 -,8,2,4,5,3,9,-
수정 -,2,8,4,5,3,9,-
수정 -,2,3,4,5,8,9,-
7 삽입 -,2,3,4,5,8,9,7
삭제 -,-,3,4,5,8,9,7 (삭제된 값 2)
수정 -,7,3,4,5,8,9,-
수정 -,3,7,4,5,8,9,-
수정 -,3,5,4,7,8,9,-
1 삽입 -,3,5,4,7,8,9,1
수정 -,3,5,1,7,8,9,4
수정 -,1,5,3,7,8,9,4

# 2,3,4,5,9,8,7 삽입은 별도의 수정이 일어나지 않는다.
# 첫번째 1 삽입에서 3과1, 2와1의 교환이 일어난다.
# 첫번째 삭제에서 1번 인덱스의 1을 삭제하고 최말단 인덱스의 8을 채워넣은 후 8과2, 8과3의 교환이 일어난다.
# 두번째 삭제에서 1번 인덱스의 2을 삭제하고 최말단 인덱스의 7을 채워넣은 후 7과3, 7과5의 교환이 일어난다.
# 마지막 1 삽입에서 4와1, 3과1의 교환이 일어난다.

# 과정을 코드로 구현하면 다음과 같다.
```
import heapq
heap = []
heapq.heapify(heap)
heapq.heappush(heap, 2)
print(heap)
heapq.heappush(heap, 3)
print(heap)
heapq.heappush(heap, 4)
print(heap)
heapq.heappush(heap, 5)
print(heap)
heapq.heappush(heap, 1)
print(heap)
heapq.heappush(heap, 9)
print(heap)
heapq.heappush(heap, 8)
print(heap)
heapq.heappop(heap)
print(heap)
heapq.heappush(heap, 7)
print(heap)
heapq.heappop(heap)
print(heap)
heapq.heappush(heap, 1)
print(heap)
```